name: Fpdb3

on:
  push:
    branches:
      - '**'  # Match any branch
  pull_request:
    branches:
      - '**'  # Match any branch
  workflow_dispatch:

jobs:
  test:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          use-mamba: true

      - name: Create and activate conda environment
        run: |
          conda create --name fpdb3-env python=${{ matrix.python-version }} --yes
          conda activate fpdb3-env

      - name: Install dependencies with conda
        run: |
          conda install -c conda-forge numpy pandas matplotlib=3.4.3 pyqt=5.15.6 aiohttp frozenlist greenlet yarl=1.6.3 --yes

      - name: Install additional dependencies with pip
        run: |
          conda activate fpdb3-env
          pip install --upgrade pip
          pip install ruff pytest
          pip install -r requirements.txt

      - name: Run tests with pytest
        run: |
          conda activate fpdb3-env
          pip install pytest pytest-cov
          pytest ./test_pot.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
          pytest ./test_swc.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: junit/test-results.xml

  build:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          use-mamba: true

      - name: Create and activate conda environment
        run: |
          conda create --name fpdb3-env python=${{ matrix.python-version }} --yes
          conda activate fpdb3-env

      - name: Install system dependencies
        run: |
          choco install visualstudio2019buildtools -y
          choco install freetype -y
          choco install pkgconfiglite -y


      - name: Install additional dependencies with pip
        run: |
          conda activate fpdb3-env
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Build project
        shell: bash
        run: |
          conda activate fpdb3-env
          ./build_fpdb.sh

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/*
